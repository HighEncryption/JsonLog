<Window x:Class="JsonLogViewer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:JsonLogViewer"
        mc:Ignorable="d"
        Icon="Resources/list-search.ico"
        Title="JSON Log Viewer" Height="850" Width="950">

    <Grid>
        <Grid.Resources>
            <ResourceDictionary>
                <local:LevelToColorConverter x:Key="LevelToColor" />
                <local:DateTimeFormatter x:Key="DateTimeFormatter" />

                <Style TargetType="{x:Type ListViewItem}">
                    
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border CornerRadius="2" SnapsToDevicePixels="True"
                                          BorderThickness="{TemplateBinding BorderThickness}" 
                                          BorderBrush="{TemplateBinding BorderBrush}" 
                                          TextElement.Foreground="{Binding Path=Level, Converter={StaticResource LevelToColor}, Mode=OneTime}">
                                    <Border Name="InnerBorder" CornerRadius="0" BorderThickness="0">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition MaxHeight="11" />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>

                                            <Rectangle Name="UpperHighlight" Visibility="Collapsed" Fill="#75FFFFFF" />
                                            <GridViewRowPresenter Grid.RowSpan="2" 
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                    </Border>
                                </Border>

                                <!--<ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{StaticResource ListItemHoverFill}" />
                                        <Setter Property="BorderBrush" Value="#FFCCF0FF" />
                                        <Setter TargetName="UpperHighlight" Property="Visibility" Value="Visible" />
                                    </Trigger>

                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="{StaticResource ListItemSelectedFill}" />
                                        <Setter Property="BorderBrush" Value="#FF98DDFB" />
                                        <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#80FFFFFF" />
                                        <Setter TargetName="UpperHighlight" Property="Visibility" Value="Visible" />
                                        <Setter TargetName="UpperHighlight" Property="Fill" Value="#40FFFFFF" />
                                    </Trigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True" />
                                            <Condition Property="Selector.IsSelectionActive" Value="False" />
                                        </MultiTrigger.Conditions>

                                        <Setter Property="Background" Value="{StaticResource ListItemSelectedInactiveFill}" />
                                        <Setter Property="BorderBrush" Value="#FFCFCFCF" />
                                    </MultiTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True" />
                                            <Condition Property="IsMouseOver" Value="True" />
                                        </MultiTrigger.Conditions>

                                        <Setter Property="Background" Value="{StaticResource ListItemSelectedHoverFill}" />
                                        <Setter Property="BorderBrush" Value="#FF98DDFB" />
                                    </MultiTrigger>

                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>-->
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    
                </Style>

                <!--<Style x:Key="ListViewItemContainerStyle" TargetType="{x:Type ListViewItem}"
                        BasedOn="{StaticResource {x:Type ListViewItem}}">
                    <Setter Property="local:ListViewItemBehavior.IsBroughtIntoViewWhenSelected" Value="true"/>
                </Style>-->
            </ResourceDictionary>

        </Grid.Resources>
        <ListView ItemsSource="{Binding Entries}" x:Name="EntryListView"
                  IsSynchronizedWithCurrentItem="True" SelectionChanged="EntryListView_OnSelectionChanged"><!--ItemContainerStyle="{StaticResource ListViewItemContainerStyle}">-->
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Timestamp" Width="100" x:Name="col1" >
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock FontFamily="Consolas" FontStretch="Condensed" Text="{Binding Timestamp, Converter={StaticResource DateTimeFormatter}, ConverterParameter='HH:mm:ss.fff', Mode=OneTime}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Header="Level" Width="50" x:Name="col2">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock FontFamily="Consolas" FontStretch="Condensed" Text="{Binding Level, Mode=OneTime}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="TID" Width="30" x:Name="col3">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock FontFamily="Consolas" FontStretch="Condensed" Text="{Binding ThreadId, Mode=OneTime}" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Header="Message" Width="{Binding ElementName=helperField, Path=ActualWidth}">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock FontFamily="Consolas" FontStretch="Condensed" Text="{Binding Message}" TextWrapping="Wrap" />
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>

        <Grid Visibility="Hidden" Margin="0,0,30,0">
            <Grid.ColumnDefinitions>
                <!--Width is bound to width of the first GridViewColumn -->
                <ColumnDefinition Width="{Binding ElementName=col1, Path=ActualWidth}"/>
                <ColumnDefinition Width="{Binding ElementName=col2, Path=ActualWidth}"/>
                <ColumnDefinition Width="{Binding ElementName=col3, Path=ActualWidth}"/>
                <!--Width is set to "Fill"-->
                <ColumnDefinition Width="*"/>
                <!--Correction Width-->
                <!--<ColumnDefinition Width="10"/>-->
            </Grid.ColumnDefinitions>
            <!--This is the hidden helper Field which is used to bind to, using the "Fill" column of the helper grid-->
            <Grid Grid.Column="3" x:Name="helperField"/>
        </Grid>
    </Grid>
</Window>
